Terminals which are not used

   INC
   DEC
   IDENT


Grammar

    0 $accept: program $end

    1 program: expression

    2 expression: primary
    3           | ADD expression
    4           | SUB expression
    5           | expression ADD expression
    6           | expression SUB expression
    7           | expression MUL expression
    8           | expression DIV expression
    9           | expression MOD expression
   10           | expression BIT_OR expression
   11           | expression EQUAL expression
   12           | expression NOTEQUAL expression
   13           | expression BIT_AND expression
   14           | expression EXC_OR expression
   15           | expression LOGIC_OR expression
   16           | expression LOGIC_AND expression
   17           | expression ASSIGN expression
   18           | expression ADD_ASSIGN expression
   19           | expression SUB_ASSIGN expression
   20           | expression MUL_ASSIGN expression
   21           | expression DIV_ASSIGN expression
   22           | expression MOD_ASSIGN expression
   23           | expression AND_ASSIGN expression
   24           | expression OR_ASSIGN expression
   25           | expression EXC_OR_ASSIGN expression
   26           | expression LSHIFT_ASSIGN expression
   27           | expression RSHIFT_ASSIGN expression
   28           | expression GT expression
   29           | expression GE expression
   30           | expression LT expression
   31           | expression LE expression
   32           | expression LSHIFT expression
   33           | expression RSHIFT expression
   34           | CHILDA expression
   35           | NOT expression
   36           | LP expression RP

   37 primary: INT
   38        | DOUBLE


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 37
DOUBLE (259) 38
ADD (260) 3 5
SUB (261) 4 6
MUL (262) 7
DIV (263) 8
MOD (264) 9
ASSIGN (265) 17
ADD_ASSIGN (266) 18
SUB_ASSIGN (267) 19
MUL_ASSIGN (268) 20
DIV_ASSIGN (269) 21
MOD_ASSIGN (270) 22
AND_ASSIGN (271) 23
OR_ASSIGN (272) 24
LSHIFT_ASSIGN (273) 26
RSHIFT_ASSIGN (274) 27
EXC_OR_ASSIGN (275) 25
EQUAL (276) 11
NOTEQUAL (277) 12
INC (278)
DEC (279)
GT (280) 28
GE (281) 29
LT (282) 30
LE (283) 31
LSHIFT (284) 32
RSHIFT (285) 33
NOT (286) 35
BIT_AND (287) 13
BIT_OR (288) 10
LOGIC_AND (289) 16
LOGIC_OR (290) 15
LP (291) 36
RP (292) 36
EXC_OR (293) 14
IDENT (294)
POSITIVE (295)
NEGATIVE (296)
CHILDA (297) 34


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
expression (45)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33 34 35 36, on right: 1 3 4 5 6
    7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
    29 30 31 32 33 34 35 36
primary (46)
    on left: 37 38, on right: 2


state 0

    0 $accept: . program $end
    1 program: . expression
    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    program     go to state 8
    expression  go to state 9
    primary     go to state 10


state 1

   37 primary: INT .

    $default  reduce using rule 37 (primary)


state 2

   38 primary: DOUBLE .

    $default  reduce using rule 38 (primary)


state 3

    2 expression: . primary
    3           | . ADD expression
    3           | ADD . expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 11
    primary     go to state 10


state 4

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    4           | SUB . expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 12
    primary     go to state 10


state 5

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   35           | NOT . expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 13
    primary     go to state 10


state 6

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   36           | LP . expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 14
    primary     go to state 10


state 7

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   34           | CHILDA . expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 15
    primary     go to state 10


state 8

    0 $accept: program . $end

    $end  shift, and go to state 16


state 9

    1 program: expression .  [$end]
    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    EQUAL          shift, and go to state 33
    NOTEQUAL       shift, and go to state 34
    GT             shift, and go to state 35
    GE             shift, and go to state 36
    LT             shift, and go to state 37
    LE             shift, and go to state 38
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_AND      shift, and go to state 43
    LOGIC_OR       shift, and go to state 44
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 1 (program)


state 10

    2 expression: primary .

    $default  reduce using rule 2 (expression)


state 11

    3 expression: ADD expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    5           | expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 3 (expression)

    Conflict between rule 3 and token ADD resolved as reduce (ADD < POSITIVE).
    Conflict between rule 3 and token SUB resolved as reduce (SUB < POSITIVE).
    Conflict between rule 3 and token MUL resolved as reduce (MUL < POSITIVE).
    Conflict between rule 3 and token DIV resolved as reduce (DIV < POSITIVE).
    Conflict between rule 3 and token MOD resolved as reduce (MOD < POSITIVE).
    Conflict between rule 3 and token ASSIGN resolved as shift (POSITIVE < ASSIGN).
    Conflict between rule 3 and token ADD_ASSIGN resolved as shift (POSITIVE < ADD_ASSIGN).
    Conflict between rule 3 and token SUB_ASSIGN resolved as shift (POSITIVE < SUB_ASSIGN).
    Conflict between rule 3 and token MUL_ASSIGN resolved as shift (POSITIVE < MUL_ASSIGN).
    Conflict between rule 3 and token DIV_ASSIGN resolved as shift (POSITIVE < DIV_ASSIGN).
    Conflict between rule 3 and token MOD_ASSIGN resolved as shift (POSITIVE < MOD_ASSIGN).
    Conflict between rule 3 and token AND_ASSIGN resolved as shift (POSITIVE < AND_ASSIGN).
    Conflict between rule 3 and token OR_ASSIGN resolved as shift (POSITIVE < OR_ASSIGN).
    Conflict between rule 3 and token LSHIFT_ASSIGN resolved as shift (POSITIVE < LSHIFT_ASSIGN).
    Conflict between rule 3 and token RSHIFT_ASSIGN resolved as shift (POSITIVE < RSHIFT_ASSIGN).
    Conflict between rule 3 and token EXC_OR_ASSIGN resolved as shift (POSITIVE < EXC_OR_ASSIGN).
    Conflict between rule 3 and token EQUAL resolved as reduce (EQUAL < POSITIVE).
    Conflict between rule 3 and token NOTEQUAL resolved as reduce (NOTEQUAL < POSITIVE).
    Conflict between rule 3 and token GT resolved as reduce (GT < POSITIVE).
    Conflict between rule 3 and token GE resolved as reduce (GE < POSITIVE).
    Conflict between rule 3 and token LT resolved as reduce (LT < POSITIVE).
    Conflict between rule 3 and token LE resolved as reduce (LE < POSITIVE).
    Conflict between rule 3 and token LSHIFT resolved as reduce (LSHIFT < POSITIVE).
    Conflict between rule 3 and token RSHIFT resolved as reduce (RSHIFT < POSITIVE).
    Conflict between rule 3 and token BIT_AND resolved as reduce (BIT_AND < POSITIVE).
    Conflict between rule 3 and token BIT_OR resolved as reduce (BIT_OR < POSITIVE).
    Conflict between rule 3 and token LOGIC_AND resolved as reduce (LOGIC_AND < POSITIVE).
    Conflict between rule 3 and token LOGIC_OR resolved as reduce (LOGIC_OR < POSITIVE).
    Conflict between rule 3 and token EXC_OR resolved as reduce (EXC_OR < POSITIVE).


state 12

    4 expression: SUB expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    5           | expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 4 (expression)

    Conflict between rule 4 and token ADD resolved as reduce (ADD < NEGATIVE).
    Conflict between rule 4 and token SUB resolved as reduce (SUB < NEGATIVE).
    Conflict between rule 4 and token MUL resolved as reduce (MUL < NEGATIVE).
    Conflict between rule 4 and token DIV resolved as reduce (DIV < NEGATIVE).
    Conflict between rule 4 and token MOD resolved as reduce (MOD < NEGATIVE).
    Conflict between rule 4 and token ASSIGN resolved as shift (NEGATIVE < ASSIGN).
    Conflict between rule 4 and token ADD_ASSIGN resolved as shift (NEGATIVE < ADD_ASSIGN).
    Conflict between rule 4 and token SUB_ASSIGN resolved as shift (NEGATIVE < SUB_ASSIGN).
    Conflict between rule 4 and token MUL_ASSIGN resolved as shift (NEGATIVE < MUL_ASSIGN).
    Conflict between rule 4 and token DIV_ASSIGN resolved as shift (NEGATIVE < DIV_ASSIGN).
    Conflict between rule 4 and token MOD_ASSIGN resolved as shift (NEGATIVE < MOD_ASSIGN).
    Conflict between rule 4 and token AND_ASSIGN resolved as shift (NEGATIVE < AND_ASSIGN).
    Conflict between rule 4 and token OR_ASSIGN resolved as shift (NEGATIVE < OR_ASSIGN).
    Conflict between rule 4 and token LSHIFT_ASSIGN resolved as shift (NEGATIVE < LSHIFT_ASSIGN).
    Conflict between rule 4 and token RSHIFT_ASSIGN resolved as shift (NEGATIVE < RSHIFT_ASSIGN).
    Conflict between rule 4 and token EXC_OR_ASSIGN resolved as shift (NEGATIVE < EXC_OR_ASSIGN).
    Conflict between rule 4 and token EQUAL resolved as reduce (EQUAL < NEGATIVE).
    Conflict between rule 4 and token NOTEQUAL resolved as reduce (NOTEQUAL < NEGATIVE).
    Conflict between rule 4 and token GT resolved as reduce (GT < NEGATIVE).
    Conflict between rule 4 and token GE resolved as reduce (GE < NEGATIVE).
    Conflict between rule 4 and token LT resolved as reduce (LT < NEGATIVE).
    Conflict between rule 4 and token LE resolved as reduce (LE < NEGATIVE).
    Conflict between rule 4 and token LSHIFT resolved as reduce (LSHIFT < NEGATIVE).
    Conflict between rule 4 and token RSHIFT resolved as reduce (RSHIFT < NEGATIVE).
    Conflict between rule 4 and token BIT_AND resolved as reduce (BIT_AND < NEGATIVE).
    Conflict between rule 4 and token BIT_OR resolved as reduce (BIT_OR < NEGATIVE).
    Conflict between rule 4 and token LOGIC_AND resolved as reduce (LOGIC_AND < NEGATIVE).
    Conflict between rule 4 and token LOGIC_OR resolved as reduce (LOGIC_OR < NEGATIVE).
    Conflict between rule 4 and token EXC_OR resolved as reduce (EXC_OR < NEGATIVE).


state 13

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression
   35           | NOT expression .  [$end, ADD, SUB, MUL, DIV, MOD, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]

    $default  reduce using rule 35 (expression)

    Conflict between rule 35 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 35 and token SUB resolved as reduce (SUB < NOT).
    Conflict between rule 35 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 35 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 35 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 35 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 35 and token ADD_ASSIGN resolved as reduce (ADD_ASSIGN < NOT).
    Conflict between rule 35 and token SUB_ASSIGN resolved as reduce (SUB_ASSIGN < NOT).
    Conflict between rule 35 and token MUL_ASSIGN resolved as reduce (MUL_ASSIGN < NOT).
    Conflict between rule 35 and token DIV_ASSIGN resolved as reduce (DIV_ASSIGN < NOT).
    Conflict between rule 35 and token MOD_ASSIGN resolved as reduce (MOD_ASSIGN < NOT).
    Conflict between rule 35 and token AND_ASSIGN resolved as reduce (AND_ASSIGN < NOT).
    Conflict between rule 35 and token OR_ASSIGN resolved as reduce (OR_ASSIGN < NOT).
    Conflict between rule 35 and token LSHIFT_ASSIGN resolved as reduce (LSHIFT_ASSIGN < NOT).
    Conflict between rule 35 and token RSHIFT_ASSIGN resolved as reduce (RSHIFT_ASSIGN < NOT).
    Conflict between rule 35 and token EXC_OR_ASSIGN resolved as reduce (EXC_OR_ASSIGN < NOT).
    Conflict between rule 35 and token EQUAL resolved as reduce (EQUAL < NOT).
    Conflict between rule 35 and token NOTEQUAL resolved as reduce (NOTEQUAL < NOT).
    Conflict between rule 35 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 35 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 35 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 35 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 35 and token LSHIFT resolved as reduce (LSHIFT < NOT).
    Conflict between rule 35 and token RSHIFT resolved as reduce (RSHIFT < NOT).
    Conflict between rule 35 and token BIT_AND resolved as reduce (BIT_AND < NOT).
    Conflict between rule 35 and token BIT_OR resolved as reduce (BIT_OR < NOT).
    Conflict between rule 35 and token LOGIC_AND resolved as reduce (LOGIC_AND < NOT).
    Conflict between rule 35 and token LOGIC_OR resolved as reduce (LOGIC_OR < NOT).
    Conflict between rule 35 and token EXC_OR resolved as reduce (EXC_OR < NOT).


state 14

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression
   36           | LP expression . RP

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    EQUAL          shift, and go to state 33
    NOTEQUAL       shift, and go to state 34
    GT             shift, and go to state 35
    GE             shift, and go to state 36
    LT             shift, and go to state 37
    LE             shift, and go to state 38
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_AND      shift, and go to state 43
    LOGIC_OR       shift, and go to state 44
    RP             shift, and go to state 46
    EXC_OR         shift, and go to state 45


state 15

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression
   34           | CHILDA expression .  [$end, ADD, SUB, MUL, DIV, MOD, ASSIGN, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, AND_ASSIGN, OR_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, EXC_OR_ASSIGN, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]

    $default  reduce using rule 34 (expression)

    Conflict between rule 34 and token ADD resolved as reduce (ADD < CHILDA).
    Conflict between rule 34 and token SUB resolved as reduce (SUB < CHILDA).
    Conflict between rule 34 and token MUL resolved as reduce (MUL < CHILDA).
    Conflict between rule 34 and token DIV resolved as reduce (DIV < CHILDA).
    Conflict between rule 34 and token MOD resolved as reduce (MOD < CHILDA).
    Conflict between rule 34 and token ASSIGN resolved as reduce (ASSIGN < CHILDA).
    Conflict between rule 34 and token ADD_ASSIGN resolved as reduce (ADD_ASSIGN < CHILDA).
    Conflict between rule 34 and token SUB_ASSIGN resolved as reduce (SUB_ASSIGN < CHILDA).
    Conflict between rule 34 and token MUL_ASSIGN resolved as reduce (MUL_ASSIGN < CHILDA).
    Conflict between rule 34 and token DIV_ASSIGN resolved as reduce (DIV_ASSIGN < CHILDA).
    Conflict between rule 34 and token MOD_ASSIGN resolved as reduce (MOD_ASSIGN < CHILDA).
    Conflict between rule 34 and token AND_ASSIGN resolved as reduce (AND_ASSIGN < CHILDA).
    Conflict between rule 34 and token OR_ASSIGN resolved as reduce (OR_ASSIGN < CHILDA).
    Conflict between rule 34 and token LSHIFT_ASSIGN resolved as reduce (LSHIFT_ASSIGN < CHILDA).
    Conflict between rule 34 and token RSHIFT_ASSIGN resolved as reduce (RSHIFT_ASSIGN < CHILDA).
    Conflict between rule 34 and token EXC_OR_ASSIGN resolved as reduce (EXC_OR_ASSIGN < CHILDA).
    Conflict between rule 34 and token EQUAL resolved as reduce (EQUAL < CHILDA).
    Conflict between rule 34 and token NOTEQUAL resolved as reduce (NOTEQUAL < CHILDA).
    Conflict between rule 34 and token GT resolved as reduce (GT < CHILDA).
    Conflict between rule 34 and token GE resolved as reduce (GE < CHILDA).
    Conflict between rule 34 and token LT resolved as reduce (LT < CHILDA).
    Conflict between rule 34 and token LE resolved as reduce (LE < CHILDA).
    Conflict between rule 34 and token LSHIFT resolved as reduce (LSHIFT < CHILDA).
    Conflict between rule 34 and token RSHIFT resolved as reduce (RSHIFT < CHILDA).
    Conflict between rule 34 and token BIT_AND resolved as reduce (BIT_AND < CHILDA).
    Conflict between rule 34 and token BIT_OR resolved as reduce (BIT_OR < CHILDA).
    Conflict between rule 34 and token LOGIC_AND resolved as reduce (LOGIC_AND < CHILDA).
    Conflict between rule 34 and token LOGIC_OR resolved as reduce (LOGIC_OR < CHILDA).
    Conflict between rule 34 and token EXC_OR resolved as reduce (EXC_OR < CHILDA).


state 16

    0 $accept: program $end .

    $default  accept


state 17

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    5           | expression ADD . expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 47
    primary     go to state 10


state 18

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    6           | expression SUB . expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 48
    primary     go to state 10


state 19

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    7           | expression MUL . expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 49
    primary     go to state 10


state 20

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    8           | expression DIV . expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 50
    primary     go to state 10


state 21

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
    9           | expression MOD . expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 51
    primary     go to state 10


state 22

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   17           | expression ASSIGN . expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 52
    primary     go to state 10


state 23

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   18           | expression ADD_ASSIGN . expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 53
    primary     go to state 10


state 24

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   19           | expression SUB_ASSIGN . expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 54
    primary     go to state 10


state 25

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   20           | expression MUL_ASSIGN . expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 55
    primary     go to state 10


state 26

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   21           | expression DIV_ASSIGN . expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 56
    primary     go to state 10


state 27

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   22           | expression MOD_ASSIGN . expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 57
    primary     go to state 10


state 28

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   23           | expression AND_ASSIGN . expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 58
    primary     go to state 10


state 29

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   24           | expression OR_ASSIGN . expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 59
    primary     go to state 10


state 30

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   26           | expression LSHIFT_ASSIGN . expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 60
    primary     go to state 10


state 31

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   27           | expression RSHIFT_ASSIGN . expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 61
    primary     go to state 10


state 32

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   25           | expression EXC_OR_ASSIGN . expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 62
    primary     go to state 10


state 33

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   11           | expression EQUAL . expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 63
    primary     go to state 10


state 34

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   12           | expression NOTEQUAL . expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 64
    primary     go to state 10


state 35

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   28           | expression GT . expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 65
    primary     go to state 10


state 36

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   29           | expression GE . expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 66
    primary     go to state 10


state 37

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   30           | expression LT . expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 67
    primary     go to state 10


state 38

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   31           | expression LE . expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 68
    primary     go to state 10


state 39

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   32           | expression LSHIFT . expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 69
    primary     go to state 10


state 40

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   33           | expression RSHIFT . expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 70
    primary     go to state 10


state 41

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   13           | expression BIT_AND . expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 71
    primary     go to state 10


state 42

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   10           | expression BIT_OR . expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 72
    primary     go to state 10


state 43

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   16           | expression LOGIC_AND . expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 73
    primary     go to state 10


state 44

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   15           | . expression LOGIC_OR expression
   15           | expression LOGIC_OR . expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 74
    primary     go to state 10


state 45

    2 expression: . primary
    3           | . ADD expression
    4           | . SUB expression
    5           | . expression ADD expression
    6           | . expression SUB expression
    7           | . expression MUL expression
    8           | . expression DIV expression
    9           | . expression MOD expression
   10           | . expression BIT_OR expression
   11           | . expression EQUAL expression
   12           | . expression NOTEQUAL expression
   13           | . expression BIT_AND expression
   14           | . expression EXC_OR expression
   14           | expression EXC_OR . expression
   15           | . expression LOGIC_OR expression
   16           | . expression LOGIC_AND expression
   17           | . expression ASSIGN expression
   18           | . expression ADD_ASSIGN expression
   19           | . expression SUB_ASSIGN expression
   20           | . expression MUL_ASSIGN expression
   21           | . expression DIV_ASSIGN expression
   22           | . expression MOD_ASSIGN expression
   23           | . expression AND_ASSIGN expression
   24           | . expression OR_ASSIGN expression
   25           | . expression EXC_OR_ASSIGN expression
   26           | . expression LSHIFT_ASSIGN expression
   27           | . expression RSHIFT_ASSIGN expression
   28           | . expression GT expression
   29           | . expression GE expression
   30           | . expression LT expression
   31           | . expression LE expression
   32           | . expression LSHIFT expression
   33           | . expression RSHIFT expression
   34           | . CHILDA expression
   35           | . NOT expression
   36           | . LP expression RP
   37 primary: . INT
   38        | . DOUBLE

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    ADD     shift, and go to state 3
    SUB     shift, and go to state 4
    NOT     shift, and go to state 5
    LP      shift, and go to state 6
    CHILDA  shift, and go to state 7

    expression  go to state 75
    primary     go to state 10


state 46

   36 expression: LP expression RP .

    $default  reduce using rule 36 (expression)


state 47

    5 expression: expression . ADD expression  [$end, ADD, SUB, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    5           | expression ADD expression .  [$end, ADD, SUB, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 5 (expression)

    Conflict between rule 5 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 5 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 5 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 5 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 5 and token MOD resolved as shift (ADD < MOD).
    Conflict between rule 5 and token ASSIGN resolved as shift (ADD < ASSIGN).
    Conflict between rule 5 and token ADD_ASSIGN resolved as shift (ADD < ADD_ASSIGN).
    Conflict between rule 5 and token SUB_ASSIGN resolved as shift (ADD < SUB_ASSIGN).
    Conflict between rule 5 and token MUL_ASSIGN resolved as shift (ADD < MUL_ASSIGN).
    Conflict between rule 5 and token DIV_ASSIGN resolved as shift (ADD < DIV_ASSIGN).
    Conflict between rule 5 and token MOD_ASSIGN resolved as shift (ADD < MOD_ASSIGN).
    Conflict between rule 5 and token AND_ASSIGN resolved as shift (ADD < AND_ASSIGN).
    Conflict between rule 5 and token OR_ASSIGN resolved as shift (ADD < OR_ASSIGN).
    Conflict between rule 5 and token LSHIFT_ASSIGN resolved as shift (ADD < LSHIFT_ASSIGN).
    Conflict between rule 5 and token RSHIFT_ASSIGN resolved as shift (ADD < RSHIFT_ASSIGN).
    Conflict between rule 5 and token EXC_OR_ASSIGN resolved as shift (ADD < EXC_OR_ASSIGN).
    Conflict between rule 5 and token EQUAL resolved as reduce (EQUAL < ADD).
    Conflict between rule 5 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD).
    Conflict between rule 5 and token GT resolved as reduce (GT < ADD).
    Conflict between rule 5 and token GE resolved as reduce (GE < ADD).
    Conflict between rule 5 and token LT resolved as reduce (LT < ADD).
    Conflict between rule 5 and token LE resolved as reduce (LE < ADD).
    Conflict between rule 5 and token LSHIFT resolved as reduce (LSHIFT < ADD).
    Conflict between rule 5 and token RSHIFT resolved as reduce (RSHIFT < ADD).
    Conflict between rule 5 and token BIT_AND resolved as reduce (BIT_AND < ADD).
    Conflict between rule 5 and token BIT_OR resolved as reduce (BIT_OR < ADD).
    Conflict between rule 5 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD).
    Conflict between rule 5 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD).
    Conflict between rule 5 and token EXC_OR resolved as reduce (EXC_OR < ADD).


state 48

    5 expression: expression . ADD expression
    6           | expression . SUB expression  [$end, ADD, SUB, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    6           | expression SUB expression .  [$end, ADD, SUB, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 6 (expression)

    Conflict between rule 6 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 6 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 6 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 6 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 6 and token MOD resolved as shift (SUB < MOD).
    Conflict between rule 6 and token ASSIGN resolved as shift (SUB < ASSIGN).
    Conflict between rule 6 and token ADD_ASSIGN resolved as shift (SUB < ADD_ASSIGN).
    Conflict between rule 6 and token SUB_ASSIGN resolved as shift (SUB < SUB_ASSIGN).
    Conflict between rule 6 and token MUL_ASSIGN resolved as shift (SUB < MUL_ASSIGN).
    Conflict between rule 6 and token DIV_ASSIGN resolved as shift (SUB < DIV_ASSIGN).
    Conflict between rule 6 and token MOD_ASSIGN resolved as shift (SUB < MOD_ASSIGN).
    Conflict between rule 6 and token AND_ASSIGN resolved as shift (SUB < AND_ASSIGN).
    Conflict between rule 6 and token OR_ASSIGN resolved as shift (SUB < OR_ASSIGN).
    Conflict between rule 6 and token LSHIFT_ASSIGN resolved as shift (SUB < LSHIFT_ASSIGN).
    Conflict between rule 6 and token RSHIFT_ASSIGN resolved as shift (SUB < RSHIFT_ASSIGN).
    Conflict between rule 6 and token EXC_OR_ASSIGN resolved as shift (SUB < EXC_OR_ASSIGN).
    Conflict between rule 6 and token EQUAL resolved as reduce (EQUAL < SUB).
    Conflict between rule 6 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB).
    Conflict between rule 6 and token GT resolved as reduce (GT < SUB).
    Conflict between rule 6 and token GE resolved as reduce (GE < SUB).
    Conflict between rule 6 and token LT resolved as reduce (LT < SUB).
    Conflict between rule 6 and token LE resolved as reduce (LE < SUB).
    Conflict between rule 6 and token LSHIFT resolved as reduce (LSHIFT < SUB).
    Conflict between rule 6 and token RSHIFT resolved as reduce (RSHIFT < SUB).
    Conflict between rule 6 and token BIT_AND resolved as reduce (BIT_AND < SUB).
    Conflict between rule 6 and token BIT_OR resolved as reduce (BIT_OR < SUB).
    Conflict between rule 6 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB).
    Conflict between rule 6 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB).
    Conflict between rule 6 and token EXC_OR resolved as reduce (EXC_OR < SUB).


state 49

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    7           | expression MUL expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 7 (expression)

    Conflict between rule 7 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 7 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 7 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 7 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 7 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 7 and token ASSIGN resolved as shift (MUL < ASSIGN).
    Conflict between rule 7 and token ADD_ASSIGN resolved as shift (MUL < ADD_ASSIGN).
    Conflict between rule 7 and token SUB_ASSIGN resolved as shift (MUL < SUB_ASSIGN).
    Conflict between rule 7 and token MUL_ASSIGN resolved as shift (MUL < MUL_ASSIGN).
    Conflict between rule 7 and token DIV_ASSIGN resolved as shift (MUL < DIV_ASSIGN).
    Conflict between rule 7 and token MOD_ASSIGN resolved as shift (MUL < MOD_ASSIGN).
    Conflict between rule 7 and token AND_ASSIGN resolved as shift (MUL < AND_ASSIGN).
    Conflict between rule 7 and token OR_ASSIGN resolved as shift (MUL < OR_ASSIGN).
    Conflict between rule 7 and token LSHIFT_ASSIGN resolved as shift (MUL < LSHIFT_ASSIGN).
    Conflict between rule 7 and token RSHIFT_ASSIGN resolved as shift (MUL < RSHIFT_ASSIGN).
    Conflict between rule 7 and token EXC_OR_ASSIGN resolved as shift (MUL < EXC_OR_ASSIGN).
    Conflict between rule 7 and token EQUAL resolved as reduce (EQUAL < MUL).
    Conflict between rule 7 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL).
    Conflict between rule 7 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 7 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 7 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 7 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 7 and token LSHIFT resolved as reduce (LSHIFT < MUL).
    Conflict between rule 7 and token RSHIFT resolved as reduce (RSHIFT < MUL).
    Conflict between rule 7 and token BIT_AND resolved as reduce (BIT_AND < MUL).
    Conflict between rule 7 and token BIT_OR resolved as reduce (BIT_OR < MUL).
    Conflict between rule 7 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL).
    Conflict between rule 7 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL).
    Conflict between rule 7 and token EXC_OR resolved as reduce (EXC_OR < MUL).


state 50

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    8           | expression DIV expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 8 (expression)

    Conflict between rule 8 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 8 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 8 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 8 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 8 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 8 and token ASSIGN resolved as shift (DIV < ASSIGN).
    Conflict between rule 8 and token ADD_ASSIGN resolved as shift (DIV < ADD_ASSIGN).
    Conflict between rule 8 and token SUB_ASSIGN resolved as shift (DIV < SUB_ASSIGN).
    Conflict between rule 8 and token MUL_ASSIGN resolved as shift (DIV < MUL_ASSIGN).
    Conflict between rule 8 and token DIV_ASSIGN resolved as shift (DIV < DIV_ASSIGN).
    Conflict between rule 8 and token MOD_ASSIGN resolved as shift (DIV < MOD_ASSIGN).
    Conflict between rule 8 and token AND_ASSIGN resolved as shift (DIV < AND_ASSIGN).
    Conflict between rule 8 and token OR_ASSIGN resolved as shift (DIV < OR_ASSIGN).
    Conflict between rule 8 and token LSHIFT_ASSIGN resolved as shift (DIV < LSHIFT_ASSIGN).
    Conflict between rule 8 and token RSHIFT_ASSIGN resolved as shift (DIV < RSHIFT_ASSIGN).
    Conflict between rule 8 and token EXC_OR_ASSIGN resolved as shift (DIV < EXC_OR_ASSIGN).
    Conflict between rule 8 and token EQUAL resolved as reduce (EQUAL < DIV).
    Conflict between rule 8 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV).
    Conflict between rule 8 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 8 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 8 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 8 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 8 and token LSHIFT resolved as reduce (LSHIFT < DIV).
    Conflict between rule 8 and token RSHIFT resolved as reduce (RSHIFT < DIV).
    Conflict between rule 8 and token BIT_AND resolved as reduce (BIT_AND < DIV).
    Conflict between rule 8 and token BIT_OR resolved as reduce (BIT_OR < DIV).
    Conflict between rule 8 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV).
    Conflict between rule 8 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV).
    Conflict between rule 8 and token EXC_OR resolved as reduce (EXC_OR < DIV).


state 51

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
    9           | expression MOD expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 9 (expression)

    Conflict between rule 9 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 9 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 9 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 9 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 9 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 9 and token ASSIGN resolved as shift (MOD < ASSIGN).
    Conflict between rule 9 and token ADD_ASSIGN resolved as shift (MOD < ADD_ASSIGN).
    Conflict between rule 9 and token SUB_ASSIGN resolved as shift (MOD < SUB_ASSIGN).
    Conflict between rule 9 and token MUL_ASSIGN resolved as shift (MOD < MUL_ASSIGN).
    Conflict between rule 9 and token DIV_ASSIGN resolved as shift (MOD < DIV_ASSIGN).
    Conflict between rule 9 and token MOD_ASSIGN resolved as shift (MOD < MOD_ASSIGN).
    Conflict between rule 9 and token AND_ASSIGN resolved as shift (MOD < AND_ASSIGN).
    Conflict between rule 9 and token OR_ASSIGN resolved as shift (MOD < OR_ASSIGN).
    Conflict between rule 9 and token LSHIFT_ASSIGN resolved as shift (MOD < LSHIFT_ASSIGN).
    Conflict between rule 9 and token RSHIFT_ASSIGN resolved as shift (MOD < RSHIFT_ASSIGN).
    Conflict between rule 9 and token EXC_OR_ASSIGN resolved as shift (MOD < EXC_OR_ASSIGN).
    Conflict between rule 9 and token EQUAL resolved as reduce (EQUAL < MOD).
    Conflict between rule 9 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD).
    Conflict between rule 9 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 9 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 9 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 9 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 9 and token LSHIFT resolved as reduce (LSHIFT < MOD).
    Conflict between rule 9 and token RSHIFT resolved as reduce (RSHIFT < MOD).
    Conflict between rule 9 and token BIT_AND resolved as reduce (BIT_AND < MOD).
    Conflict between rule 9 and token BIT_OR resolved as reduce (BIT_OR < MOD).
    Conflict between rule 9 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD).
    Conflict between rule 9 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD).
    Conflict between rule 9 and token EXC_OR resolved as reduce (EXC_OR < MOD).


state 52

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   17           | expression ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 17 (expression)

    Conflict between rule 17 and token ADD resolved as reduce (ADD < ASSIGN).
    Conflict between rule 17 and token SUB resolved as reduce (SUB < ASSIGN).
    Conflict between rule 17 and token MUL resolved as reduce (MUL < ASSIGN).
    Conflict between rule 17 and token DIV resolved as reduce (DIV < ASSIGN).
    Conflict between rule 17 and token MOD resolved as reduce (MOD < ASSIGN).
    Conflict between rule 17 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 17 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 17 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 17 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 17 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 17 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 17 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 17 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 17 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 17 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 17 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 17 and token EQUAL resolved as reduce (EQUAL < ASSIGN).
    Conflict between rule 17 and token NOTEQUAL resolved as reduce (NOTEQUAL < ASSIGN).
    Conflict between rule 17 and token GT resolved as reduce (GT < ASSIGN).
    Conflict between rule 17 and token GE resolved as reduce (GE < ASSIGN).
    Conflict between rule 17 and token LT resolved as reduce (LT < ASSIGN).
    Conflict between rule 17 and token LE resolved as reduce (LE < ASSIGN).
    Conflict between rule 17 and token LSHIFT resolved as reduce (LSHIFT < ASSIGN).
    Conflict between rule 17 and token RSHIFT resolved as reduce (RSHIFT < ASSIGN).
    Conflict between rule 17 and token BIT_AND resolved as reduce (BIT_AND < ASSIGN).
    Conflict between rule 17 and token BIT_OR resolved as reduce (BIT_OR < ASSIGN).
    Conflict between rule 17 and token LOGIC_AND resolved as reduce (LOGIC_AND < ASSIGN).
    Conflict between rule 17 and token LOGIC_OR resolved as reduce (LOGIC_OR < ASSIGN).
    Conflict between rule 17 and token EXC_OR resolved as reduce (EXC_OR < ASSIGN).


state 53

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   18           | expression ADD_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 18 (expression)

    Conflict between rule 18 and token ADD resolved as reduce (ADD < ADD_ASSIGN).
    Conflict between rule 18 and token SUB resolved as reduce (SUB < ADD_ASSIGN).
    Conflict between rule 18 and token MUL resolved as reduce (MUL < ADD_ASSIGN).
    Conflict between rule 18 and token DIV resolved as reduce (DIV < ADD_ASSIGN).
    Conflict between rule 18 and token MOD resolved as reduce (MOD < ADD_ASSIGN).
    Conflict between rule 18 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 18 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 18 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 18 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 18 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 18 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 18 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 18 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 18 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 18 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 18 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 18 and token EQUAL resolved as reduce (EQUAL < ADD_ASSIGN).
    Conflict between rule 18 and token NOTEQUAL resolved as reduce (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 18 and token GT resolved as reduce (GT < ADD_ASSIGN).
    Conflict between rule 18 and token GE resolved as reduce (GE < ADD_ASSIGN).
    Conflict between rule 18 and token LT resolved as reduce (LT < ADD_ASSIGN).
    Conflict between rule 18 and token LE resolved as reduce (LE < ADD_ASSIGN).
    Conflict between rule 18 and token LSHIFT resolved as reduce (LSHIFT < ADD_ASSIGN).
    Conflict between rule 18 and token RSHIFT resolved as reduce (RSHIFT < ADD_ASSIGN).
    Conflict between rule 18 and token BIT_AND resolved as reduce (BIT_AND < ADD_ASSIGN).
    Conflict between rule 18 and token BIT_OR resolved as reduce (BIT_OR < ADD_ASSIGN).
    Conflict between rule 18 and token LOGIC_AND resolved as reduce (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 18 and token LOGIC_OR resolved as reduce (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 18 and token EXC_OR resolved as reduce (EXC_OR < ADD_ASSIGN).


state 54

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   19           | expression SUB_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 19 (expression)

    Conflict between rule 19 and token ADD resolved as reduce (ADD < SUB_ASSIGN).
    Conflict between rule 19 and token SUB resolved as reduce (SUB < SUB_ASSIGN).
    Conflict between rule 19 and token MUL resolved as reduce (MUL < SUB_ASSIGN).
    Conflict between rule 19 and token DIV resolved as reduce (DIV < SUB_ASSIGN).
    Conflict between rule 19 and token MOD resolved as reduce (MOD < SUB_ASSIGN).
    Conflict between rule 19 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 19 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 19 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 19 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 19 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 19 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 19 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 19 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 19 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 19 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 19 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 19 and token EQUAL resolved as reduce (EQUAL < SUB_ASSIGN).
    Conflict between rule 19 and token NOTEQUAL resolved as reduce (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 19 and token GT resolved as reduce (GT < SUB_ASSIGN).
    Conflict between rule 19 and token GE resolved as reduce (GE < SUB_ASSIGN).
    Conflict between rule 19 and token LT resolved as reduce (LT < SUB_ASSIGN).
    Conflict between rule 19 and token LE resolved as reduce (LE < SUB_ASSIGN).
    Conflict between rule 19 and token LSHIFT resolved as reduce (LSHIFT < SUB_ASSIGN).
    Conflict between rule 19 and token RSHIFT resolved as reduce (RSHIFT < SUB_ASSIGN).
    Conflict between rule 19 and token BIT_AND resolved as reduce (BIT_AND < SUB_ASSIGN).
    Conflict between rule 19 and token BIT_OR resolved as reduce (BIT_OR < SUB_ASSIGN).
    Conflict between rule 19 and token LOGIC_AND resolved as reduce (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 19 and token LOGIC_OR resolved as reduce (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 19 and token EXC_OR resolved as reduce (EXC_OR < SUB_ASSIGN).


state 55

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   20           | expression MUL_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 20 (expression)

    Conflict between rule 20 and token ADD resolved as reduce (ADD < MUL_ASSIGN).
    Conflict between rule 20 and token SUB resolved as reduce (SUB < MUL_ASSIGN).
    Conflict between rule 20 and token MUL resolved as reduce (MUL < MUL_ASSIGN).
    Conflict between rule 20 and token DIV resolved as reduce (DIV < MUL_ASSIGN).
    Conflict between rule 20 and token MOD resolved as reduce (MOD < MUL_ASSIGN).
    Conflict between rule 20 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 20 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 20 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 20 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 20 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 20 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 20 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 20 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 20 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 20 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 20 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 20 and token EQUAL resolved as reduce (EQUAL < MUL_ASSIGN).
    Conflict between rule 20 and token NOTEQUAL resolved as reduce (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 20 and token GT resolved as reduce (GT < MUL_ASSIGN).
    Conflict between rule 20 and token GE resolved as reduce (GE < MUL_ASSIGN).
    Conflict between rule 20 and token LT resolved as reduce (LT < MUL_ASSIGN).
    Conflict between rule 20 and token LE resolved as reduce (LE < MUL_ASSIGN).
    Conflict between rule 20 and token LSHIFT resolved as reduce (LSHIFT < MUL_ASSIGN).
    Conflict between rule 20 and token RSHIFT resolved as reduce (RSHIFT < MUL_ASSIGN).
    Conflict between rule 20 and token BIT_AND resolved as reduce (BIT_AND < MUL_ASSIGN).
    Conflict between rule 20 and token BIT_OR resolved as reduce (BIT_OR < MUL_ASSIGN).
    Conflict between rule 20 and token LOGIC_AND resolved as reduce (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 20 and token LOGIC_OR resolved as reduce (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 20 and token EXC_OR resolved as reduce (EXC_OR < MUL_ASSIGN).


state 56

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   21           | expression DIV_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 21 (expression)

    Conflict between rule 21 and token ADD resolved as reduce (ADD < DIV_ASSIGN).
    Conflict between rule 21 and token SUB resolved as reduce (SUB < DIV_ASSIGN).
    Conflict between rule 21 and token MUL resolved as reduce (MUL < DIV_ASSIGN).
    Conflict between rule 21 and token DIV resolved as reduce (DIV < DIV_ASSIGN).
    Conflict between rule 21 and token MOD resolved as reduce (MOD < DIV_ASSIGN).
    Conflict between rule 21 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 21 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 21 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 21 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 21 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 21 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 21 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 21 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 21 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 21 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 21 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 21 and token EQUAL resolved as reduce (EQUAL < DIV_ASSIGN).
    Conflict between rule 21 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 21 and token GT resolved as reduce (GT < DIV_ASSIGN).
    Conflict between rule 21 and token GE resolved as reduce (GE < DIV_ASSIGN).
    Conflict between rule 21 and token LT resolved as reduce (LT < DIV_ASSIGN).
    Conflict between rule 21 and token LE resolved as reduce (LE < DIV_ASSIGN).
    Conflict between rule 21 and token LSHIFT resolved as reduce (LSHIFT < DIV_ASSIGN).
    Conflict between rule 21 and token RSHIFT resolved as reduce (RSHIFT < DIV_ASSIGN).
    Conflict between rule 21 and token BIT_AND resolved as reduce (BIT_AND < DIV_ASSIGN).
    Conflict between rule 21 and token BIT_OR resolved as reduce (BIT_OR < DIV_ASSIGN).
    Conflict between rule 21 and token LOGIC_AND resolved as reduce (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 21 and token LOGIC_OR resolved as reduce (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 21 and token EXC_OR resolved as reduce (EXC_OR < DIV_ASSIGN).


state 57

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   22           | expression MOD_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 22 (expression)

    Conflict between rule 22 and token ADD resolved as reduce (ADD < MOD_ASSIGN).
    Conflict between rule 22 and token SUB resolved as reduce (SUB < MOD_ASSIGN).
    Conflict between rule 22 and token MUL resolved as reduce (MUL < MOD_ASSIGN).
    Conflict between rule 22 and token DIV resolved as reduce (DIV < MOD_ASSIGN).
    Conflict between rule 22 and token MOD resolved as reduce (MOD < MOD_ASSIGN).
    Conflict between rule 22 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 22 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 22 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 22 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 22 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 22 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 22 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 22 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 22 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 22 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 22 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 22 and token EQUAL resolved as reduce (EQUAL < MOD_ASSIGN).
    Conflict between rule 22 and token NOTEQUAL resolved as reduce (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 22 and token GT resolved as reduce (GT < MOD_ASSIGN).
    Conflict between rule 22 and token GE resolved as reduce (GE < MOD_ASSIGN).
    Conflict between rule 22 and token LT resolved as reduce (LT < MOD_ASSIGN).
    Conflict between rule 22 and token LE resolved as reduce (LE < MOD_ASSIGN).
    Conflict between rule 22 and token LSHIFT resolved as reduce (LSHIFT < MOD_ASSIGN).
    Conflict between rule 22 and token RSHIFT resolved as reduce (RSHIFT < MOD_ASSIGN).
    Conflict between rule 22 and token BIT_AND resolved as reduce (BIT_AND < MOD_ASSIGN).
    Conflict between rule 22 and token BIT_OR resolved as reduce (BIT_OR < MOD_ASSIGN).
    Conflict between rule 22 and token LOGIC_AND resolved as reduce (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 22 and token LOGIC_OR resolved as reduce (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 22 and token EXC_OR resolved as reduce (EXC_OR < MOD_ASSIGN).


state 58

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   23           | expression AND_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 23 (expression)

    Conflict between rule 23 and token ADD resolved as reduce (ADD < AND_ASSIGN).
    Conflict between rule 23 and token SUB resolved as reduce (SUB < AND_ASSIGN).
    Conflict between rule 23 and token MUL resolved as reduce (MUL < AND_ASSIGN).
    Conflict between rule 23 and token DIV resolved as reduce (DIV < AND_ASSIGN).
    Conflict between rule 23 and token MOD resolved as reduce (MOD < AND_ASSIGN).
    Conflict between rule 23 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 23 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 23 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 23 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 23 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 23 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 23 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 23 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 23 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 23 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 23 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 23 and token EQUAL resolved as reduce (EQUAL < AND_ASSIGN).
    Conflict between rule 23 and token NOTEQUAL resolved as reduce (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 23 and token GT resolved as reduce (GT < AND_ASSIGN).
    Conflict between rule 23 and token GE resolved as reduce (GE < AND_ASSIGN).
    Conflict between rule 23 and token LT resolved as reduce (LT < AND_ASSIGN).
    Conflict between rule 23 and token LE resolved as reduce (LE < AND_ASSIGN).
    Conflict between rule 23 and token LSHIFT resolved as reduce (LSHIFT < AND_ASSIGN).
    Conflict between rule 23 and token RSHIFT resolved as reduce (RSHIFT < AND_ASSIGN).
    Conflict between rule 23 and token BIT_AND resolved as reduce (BIT_AND < AND_ASSIGN).
    Conflict between rule 23 and token BIT_OR resolved as reduce (BIT_OR < AND_ASSIGN).
    Conflict between rule 23 and token LOGIC_AND resolved as reduce (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 23 and token LOGIC_OR resolved as reduce (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 23 and token EXC_OR resolved as reduce (EXC_OR < AND_ASSIGN).


state 59

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   24           | expression OR_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 24 (expression)

    Conflict between rule 24 and token ADD resolved as reduce (ADD < OR_ASSIGN).
    Conflict between rule 24 and token SUB resolved as reduce (SUB < OR_ASSIGN).
    Conflict between rule 24 and token MUL resolved as reduce (MUL < OR_ASSIGN).
    Conflict between rule 24 and token DIV resolved as reduce (DIV < OR_ASSIGN).
    Conflict between rule 24 and token MOD resolved as reduce (MOD < OR_ASSIGN).
    Conflict between rule 24 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 24 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 24 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 24 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 24 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 24 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 24 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 24 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 24 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 24 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 24 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 24 and token EQUAL resolved as reduce (EQUAL < OR_ASSIGN).
    Conflict between rule 24 and token NOTEQUAL resolved as reduce (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 24 and token GT resolved as reduce (GT < OR_ASSIGN).
    Conflict between rule 24 and token GE resolved as reduce (GE < OR_ASSIGN).
    Conflict between rule 24 and token LT resolved as reduce (LT < OR_ASSIGN).
    Conflict between rule 24 and token LE resolved as reduce (LE < OR_ASSIGN).
    Conflict between rule 24 and token LSHIFT resolved as reduce (LSHIFT < OR_ASSIGN).
    Conflict between rule 24 and token RSHIFT resolved as reduce (RSHIFT < OR_ASSIGN).
    Conflict between rule 24 and token BIT_AND resolved as reduce (BIT_AND < OR_ASSIGN).
    Conflict between rule 24 and token BIT_OR resolved as reduce (BIT_OR < OR_ASSIGN).
    Conflict between rule 24 and token LOGIC_AND resolved as reduce (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 24 and token LOGIC_OR resolved as reduce (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 24 and token EXC_OR resolved as reduce (EXC_OR < OR_ASSIGN).


state 60

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   26           | expression LSHIFT_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 26 (expression)

    Conflict between rule 26 and token ADD resolved as reduce (ADD < LSHIFT_ASSIGN).
    Conflict between rule 26 and token SUB resolved as reduce (SUB < LSHIFT_ASSIGN).
    Conflict between rule 26 and token MUL resolved as reduce (MUL < LSHIFT_ASSIGN).
    Conflict between rule 26 and token DIV resolved as reduce (DIV < LSHIFT_ASSIGN).
    Conflict between rule 26 and token MOD resolved as reduce (MOD < LSHIFT_ASSIGN).
    Conflict between rule 26 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 26 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 26 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 26 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 26 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 26 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 26 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 26 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 26 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 26 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 26 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 26 and token EQUAL resolved as reduce (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 26 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 26 and token GT resolved as reduce (GT < LSHIFT_ASSIGN).
    Conflict between rule 26 and token GE resolved as reduce (GE < LSHIFT_ASSIGN).
    Conflict between rule 26 and token LT resolved as reduce (LT < LSHIFT_ASSIGN).
    Conflict between rule 26 and token LE resolved as reduce (LE < LSHIFT_ASSIGN).
    Conflict between rule 26 and token LSHIFT resolved as reduce (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 26 and token RSHIFT resolved as reduce (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 26 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 26 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 26 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 26 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 26 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT_ASSIGN).


state 61

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   27           | expression RSHIFT_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 27 (expression)

    Conflict between rule 27 and token ADD resolved as reduce (ADD < RSHIFT_ASSIGN).
    Conflict between rule 27 and token SUB resolved as reduce (SUB < RSHIFT_ASSIGN).
    Conflict between rule 27 and token MUL resolved as reduce (MUL < RSHIFT_ASSIGN).
    Conflict between rule 27 and token DIV resolved as reduce (DIV < RSHIFT_ASSIGN).
    Conflict between rule 27 and token MOD resolved as reduce (MOD < RSHIFT_ASSIGN).
    Conflict between rule 27 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 27 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 27 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 27 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 27 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 27 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 27 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 27 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 27 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 27 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 27 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 27 and token EQUAL resolved as reduce (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 27 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 27 and token GT resolved as reduce (GT < RSHIFT_ASSIGN).
    Conflict between rule 27 and token GE resolved as reduce (GE < RSHIFT_ASSIGN).
    Conflict between rule 27 and token LT resolved as reduce (LT < RSHIFT_ASSIGN).
    Conflict between rule 27 and token LE resolved as reduce (LE < RSHIFT_ASSIGN).
    Conflict between rule 27 and token LSHIFT resolved as reduce (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 27 and token RSHIFT resolved as reduce (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 27 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 27 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 27 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 27 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 27 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT_ASSIGN).


state 62

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   25           | expression EXC_OR_ASSIGN expression .  [$end, ADD, SUB, MUL, DIV, MOD, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 25 (expression)

    Conflict between rule 25 and token ADD resolved as reduce (ADD < EXC_OR_ASSIGN).
    Conflict between rule 25 and token SUB resolved as reduce (SUB < EXC_OR_ASSIGN).
    Conflict between rule 25 and token MUL resolved as reduce (MUL < EXC_OR_ASSIGN).
    Conflict between rule 25 and token DIV resolved as reduce (DIV < EXC_OR_ASSIGN).
    Conflict between rule 25 and token MOD resolved as reduce (MOD < EXC_OR_ASSIGN).
    Conflict between rule 25 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 25 and token ADD_ASSIGN resolved as shift (%right ADD_ASSIGN).
    Conflict between rule 25 and token SUB_ASSIGN resolved as shift (%right SUB_ASSIGN).
    Conflict between rule 25 and token MUL_ASSIGN resolved as shift (%right MUL_ASSIGN).
    Conflict between rule 25 and token DIV_ASSIGN resolved as shift (%right DIV_ASSIGN).
    Conflict between rule 25 and token MOD_ASSIGN resolved as shift (%right MOD_ASSIGN).
    Conflict between rule 25 and token AND_ASSIGN resolved as shift (%right AND_ASSIGN).
    Conflict between rule 25 and token OR_ASSIGN resolved as shift (%right OR_ASSIGN).
    Conflict between rule 25 and token LSHIFT_ASSIGN resolved as shift (%right LSHIFT_ASSIGN).
    Conflict between rule 25 and token RSHIFT_ASSIGN resolved as shift (%right RSHIFT_ASSIGN).
    Conflict between rule 25 and token EXC_OR_ASSIGN resolved as shift (%right EXC_OR_ASSIGN).
    Conflict between rule 25 and token EQUAL resolved as reduce (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 25 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 25 and token GT resolved as reduce (GT < EXC_OR_ASSIGN).
    Conflict between rule 25 and token GE resolved as reduce (GE < EXC_OR_ASSIGN).
    Conflict between rule 25 and token LT resolved as reduce (LT < EXC_OR_ASSIGN).
    Conflict between rule 25 and token LE resolved as reduce (LE < EXC_OR_ASSIGN).
    Conflict between rule 25 and token LSHIFT resolved as reduce (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 25 and token RSHIFT resolved as reduce (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 25 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 25 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 25 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 25 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 25 and token EXC_OR resolved as reduce (EXC_OR < EXC_OR_ASSIGN).


state 63

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression  [$end, EQUAL, NOTEQUAL, RP]
   11           | expression EQUAL expression .  [$end, EQUAL, NOTEQUAL, RP]
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    GT             shift, and go to state 35
    GE             shift, and go to state 36
    LT             shift, and go to state 37
    LE             shift, and go to state 38
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_AND      shift, and go to state 43
    LOGIC_OR       shift, and go to state 44
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 11 (expression)

    Conflict between rule 11 and token ADD resolved as shift (EQUAL < ADD).
    Conflict between rule 11 and token SUB resolved as shift (EQUAL < SUB).
    Conflict between rule 11 and token MUL resolved as shift (EQUAL < MUL).
    Conflict between rule 11 and token DIV resolved as shift (EQUAL < DIV).
    Conflict between rule 11 and token MOD resolved as shift (EQUAL < MOD).
    Conflict between rule 11 and token ASSIGN resolved as shift (EQUAL < ASSIGN).
    Conflict between rule 11 and token ADD_ASSIGN resolved as shift (EQUAL < ADD_ASSIGN).
    Conflict between rule 11 and token SUB_ASSIGN resolved as shift (EQUAL < SUB_ASSIGN).
    Conflict between rule 11 and token MUL_ASSIGN resolved as shift (EQUAL < MUL_ASSIGN).
    Conflict between rule 11 and token DIV_ASSIGN resolved as shift (EQUAL < DIV_ASSIGN).
    Conflict between rule 11 and token MOD_ASSIGN resolved as shift (EQUAL < MOD_ASSIGN).
    Conflict between rule 11 and token AND_ASSIGN resolved as shift (EQUAL < AND_ASSIGN).
    Conflict between rule 11 and token OR_ASSIGN resolved as shift (EQUAL < OR_ASSIGN).
    Conflict between rule 11 and token LSHIFT_ASSIGN resolved as shift (EQUAL < LSHIFT_ASSIGN).
    Conflict between rule 11 and token RSHIFT_ASSIGN resolved as shift (EQUAL < RSHIFT_ASSIGN).
    Conflict between rule 11 and token EXC_OR_ASSIGN resolved as shift (EQUAL < EXC_OR_ASSIGN).
    Conflict between rule 11 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 11 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 11 and token GT resolved as shift (EQUAL < GT).
    Conflict between rule 11 and token GE resolved as shift (EQUAL < GE).
    Conflict between rule 11 and token LT resolved as shift (EQUAL < LT).
    Conflict between rule 11 and token LE resolved as shift (EQUAL < LE).
    Conflict between rule 11 and token LSHIFT resolved as shift (EQUAL < LSHIFT).
    Conflict between rule 11 and token RSHIFT resolved as shift (EQUAL < RSHIFT).
    Conflict between rule 11 and token BIT_AND resolved as shift (EQUAL < BIT_AND).
    Conflict between rule 11 and token BIT_OR resolved as shift (EQUAL < BIT_OR).
    Conflict between rule 11 and token LOGIC_AND resolved as shift (EQUAL < LOGIC_AND).
    Conflict between rule 11 and token LOGIC_OR resolved as shift (EQUAL < LOGIC_OR).
    Conflict between rule 11 and token EXC_OR resolved as shift (EQUAL < EXC_OR).


state 64

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression  [$end, EQUAL, NOTEQUAL, RP]
   12           | expression NOTEQUAL expression .  [$end, EQUAL, NOTEQUAL, RP]
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    GT             shift, and go to state 35
    GE             shift, and go to state 36
    LT             shift, and go to state 37
    LE             shift, and go to state 38
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_AND      shift, and go to state 43
    LOGIC_OR       shift, and go to state 44
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 12 (expression)

    Conflict between rule 12 and token ADD resolved as shift (NOTEQUAL < ADD).
    Conflict between rule 12 and token SUB resolved as shift (NOTEQUAL < SUB).
    Conflict between rule 12 and token MUL resolved as shift (NOTEQUAL < MUL).
    Conflict between rule 12 and token DIV resolved as shift (NOTEQUAL < DIV).
    Conflict between rule 12 and token MOD resolved as shift (NOTEQUAL < MOD).
    Conflict between rule 12 and token ASSIGN resolved as shift (NOTEQUAL < ASSIGN).
    Conflict between rule 12 and token ADD_ASSIGN resolved as shift (NOTEQUAL < ADD_ASSIGN).
    Conflict between rule 12 and token SUB_ASSIGN resolved as shift (NOTEQUAL < SUB_ASSIGN).
    Conflict between rule 12 and token MUL_ASSIGN resolved as shift (NOTEQUAL < MUL_ASSIGN).
    Conflict between rule 12 and token DIV_ASSIGN resolved as shift (NOTEQUAL < DIV_ASSIGN).
    Conflict between rule 12 and token MOD_ASSIGN resolved as shift (NOTEQUAL < MOD_ASSIGN).
    Conflict between rule 12 and token AND_ASSIGN resolved as shift (NOTEQUAL < AND_ASSIGN).
    Conflict between rule 12 and token OR_ASSIGN resolved as shift (NOTEQUAL < OR_ASSIGN).
    Conflict between rule 12 and token LSHIFT_ASSIGN resolved as shift (NOTEQUAL < LSHIFT_ASSIGN).
    Conflict between rule 12 and token RSHIFT_ASSIGN resolved as shift (NOTEQUAL < RSHIFT_ASSIGN).
    Conflict between rule 12 and token EXC_OR_ASSIGN resolved as shift (NOTEQUAL < EXC_OR_ASSIGN).
    Conflict between rule 12 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 12 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 12 and token GT resolved as shift (NOTEQUAL < GT).
    Conflict between rule 12 and token GE resolved as shift (NOTEQUAL < GE).
    Conflict between rule 12 and token LT resolved as shift (NOTEQUAL < LT).
    Conflict between rule 12 and token LE resolved as shift (NOTEQUAL < LE).
    Conflict between rule 12 and token LSHIFT resolved as shift (NOTEQUAL < LSHIFT).
    Conflict between rule 12 and token RSHIFT resolved as shift (NOTEQUAL < RSHIFT).
    Conflict between rule 12 and token BIT_AND resolved as shift (NOTEQUAL < BIT_AND).
    Conflict between rule 12 and token BIT_OR resolved as shift (NOTEQUAL < BIT_OR).
    Conflict between rule 12 and token LOGIC_AND resolved as shift (NOTEQUAL < LOGIC_AND).
    Conflict between rule 12 and token LOGIC_OR resolved as shift (NOTEQUAL < LOGIC_OR).
    Conflict between rule 12 and token EXC_OR resolved as shift (NOTEQUAL < EXC_OR).


state 65

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, RP]
   28           | expression GT expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, RP]
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_AND      shift, and go to state 43
    LOGIC_OR       shift, and go to state 44
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 28 (expression)

    Conflict between rule 28 and token ADD resolved as shift (GT < ADD).
    Conflict between rule 28 and token SUB resolved as shift (GT < SUB).
    Conflict between rule 28 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 28 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 28 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 28 and token ASSIGN resolved as shift (GT < ASSIGN).
    Conflict between rule 28 and token ADD_ASSIGN resolved as shift (GT < ADD_ASSIGN).
    Conflict between rule 28 and token SUB_ASSIGN resolved as shift (GT < SUB_ASSIGN).
    Conflict between rule 28 and token MUL_ASSIGN resolved as shift (GT < MUL_ASSIGN).
    Conflict between rule 28 and token DIV_ASSIGN resolved as shift (GT < DIV_ASSIGN).
    Conflict between rule 28 and token MOD_ASSIGN resolved as shift (GT < MOD_ASSIGN).
    Conflict between rule 28 and token AND_ASSIGN resolved as shift (GT < AND_ASSIGN).
    Conflict between rule 28 and token OR_ASSIGN resolved as shift (GT < OR_ASSIGN).
    Conflict between rule 28 and token LSHIFT_ASSIGN resolved as shift (GT < LSHIFT_ASSIGN).
    Conflict between rule 28 and token RSHIFT_ASSIGN resolved as shift (GT < RSHIFT_ASSIGN).
    Conflict between rule 28 and token EXC_OR_ASSIGN resolved as shift (GT < EXC_OR_ASSIGN).
    Conflict between rule 28 and token EQUAL resolved as reduce (EQUAL < GT).
    Conflict between rule 28 and token NOTEQUAL resolved as reduce (NOTEQUAL < GT).
    Conflict between rule 28 and token GT resolved as reduce (%left GT).
    Conflict between rule 28 and token GE resolved as reduce (%left GE).
    Conflict between rule 28 and token LT resolved as reduce (%left LT).
    Conflict between rule 28 and token LE resolved as reduce (%left LE).
    Conflict between rule 28 and token LSHIFT resolved as shift (GT < LSHIFT).
    Conflict between rule 28 and token RSHIFT resolved as shift (GT < RSHIFT).
    Conflict between rule 28 and token BIT_AND resolved as shift (GT < BIT_AND).
    Conflict between rule 28 and token BIT_OR resolved as shift (GT < BIT_OR).
    Conflict between rule 28 and token LOGIC_AND resolved as shift (GT < LOGIC_AND).
    Conflict between rule 28 and token LOGIC_OR resolved as shift (GT < LOGIC_OR).
    Conflict between rule 28 and token EXC_OR resolved as shift (GT < EXC_OR).


state 66

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, RP]
   29           | expression GE expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, RP]
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_AND      shift, and go to state 43
    LOGIC_OR       shift, and go to state 44
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 29 (expression)

    Conflict between rule 29 and token ADD resolved as shift (GE < ADD).
    Conflict between rule 29 and token SUB resolved as shift (GE < SUB).
    Conflict between rule 29 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 29 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 29 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 29 and token ASSIGN resolved as shift (GE < ASSIGN).
    Conflict between rule 29 and token ADD_ASSIGN resolved as shift (GE < ADD_ASSIGN).
    Conflict between rule 29 and token SUB_ASSIGN resolved as shift (GE < SUB_ASSIGN).
    Conflict between rule 29 and token MUL_ASSIGN resolved as shift (GE < MUL_ASSIGN).
    Conflict between rule 29 and token DIV_ASSIGN resolved as shift (GE < DIV_ASSIGN).
    Conflict between rule 29 and token MOD_ASSIGN resolved as shift (GE < MOD_ASSIGN).
    Conflict between rule 29 and token AND_ASSIGN resolved as shift (GE < AND_ASSIGN).
    Conflict between rule 29 and token OR_ASSIGN resolved as shift (GE < OR_ASSIGN).
    Conflict between rule 29 and token LSHIFT_ASSIGN resolved as shift (GE < LSHIFT_ASSIGN).
    Conflict between rule 29 and token RSHIFT_ASSIGN resolved as shift (GE < RSHIFT_ASSIGN).
    Conflict between rule 29 and token EXC_OR_ASSIGN resolved as shift (GE < EXC_OR_ASSIGN).
    Conflict between rule 29 and token EQUAL resolved as reduce (EQUAL < GE).
    Conflict between rule 29 and token NOTEQUAL resolved as reduce (NOTEQUAL < GE).
    Conflict between rule 29 and token GT resolved as reduce (%left GT).
    Conflict between rule 29 and token GE resolved as reduce (%left GE).
    Conflict between rule 29 and token LT resolved as reduce (%left LT).
    Conflict between rule 29 and token LE resolved as reduce (%left LE).
    Conflict between rule 29 and token LSHIFT resolved as shift (GE < LSHIFT).
    Conflict between rule 29 and token RSHIFT resolved as shift (GE < RSHIFT).
    Conflict between rule 29 and token BIT_AND resolved as shift (GE < BIT_AND).
    Conflict between rule 29 and token BIT_OR resolved as shift (GE < BIT_OR).
    Conflict between rule 29 and token LOGIC_AND resolved as shift (GE < LOGIC_AND).
    Conflict between rule 29 and token LOGIC_OR resolved as shift (GE < LOGIC_OR).
    Conflict between rule 29 and token EXC_OR resolved as shift (GE < EXC_OR).


state 67

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, RP]
   30           | expression LT expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, RP]
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_AND      shift, and go to state 43
    LOGIC_OR       shift, and go to state 44
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 30 (expression)

    Conflict between rule 30 and token ADD resolved as shift (LT < ADD).
    Conflict between rule 30 and token SUB resolved as shift (LT < SUB).
    Conflict between rule 30 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 30 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 30 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 30 and token ASSIGN resolved as shift (LT < ASSIGN).
    Conflict between rule 30 and token ADD_ASSIGN resolved as shift (LT < ADD_ASSIGN).
    Conflict between rule 30 and token SUB_ASSIGN resolved as shift (LT < SUB_ASSIGN).
    Conflict between rule 30 and token MUL_ASSIGN resolved as shift (LT < MUL_ASSIGN).
    Conflict between rule 30 and token DIV_ASSIGN resolved as shift (LT < DIV_ASSIGN).
    Conflict between rule 30 and token MOD_ASSIGN resolved as shift (LT < MOD_ASSIGN).
    Conflict between rule 30 and token AND_ASSIGN resolved as shift (LT < AND_ASSIGN).
    Conflict between rule 30 and token OR_ASSIGN resolved as shift (LT < OR_ASSIGN).
    Conflict between rule 30 and token LSHIFT_ASSIGN resolved as shift (LT < LSHIFT_ASSIGN).
    Conflict between rule 30 and token RSHIFT_ASSIGN resolved as shift (LT < RSHIFT_ASSIGN).
    Conflict between rule 30 and token EXC_OR_ASSIGN resolved as shift (LT < EXC_OR_ASSIGN).
    Conflict between rule 30 and token EQUAL resolved as reduce (EQUAL < LT).
    Conflict between rule 30 and token NOTEQUAL resolved as reduce (NOTEQUAL < LT).
    Conflict between rule 30 and token GT resolved as reduce (%left GT).
    Conflict between rule 30 and token GE resolved as reduce (%left GE).
    Conflict between rule 30 and token LT resolved as reduce (%left LT).
    Conflict between rule 30 and token LE resolved as reduce (%left LE).
    Conflict between rule 30 and token LSHIFT resolved as shift (LT < LSHIFT).
    Conflict between rule 30 and token RSHIFT resolved as shift (LT < RSHIFT).
    Conflict between rule 30 and token BIT_AND resolved as shift (LT < BIT_AND).
    Conflict between rule 30 and token BIT_OR resolved as shift (LT < BIT_OR).
    Conflict between rule 30 and token LOGIC_AND resolved as shift (LT < LOGIC_AND).
    Conflict between rule 30 and token LOGIC_OR resolved as shift (LT < LOGIC_OR).
    Conflict between rule 30 and token EXC_OR resolved as shift (LT < EXC_OR).


state 68

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, RP]
   31           | expression LE expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, RP]
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_AND      shift, and go to state 43
    LOGIC_OR       shift, and go to state 44
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 31 (expression)

    Conflict between rule 31 and token ADD resolved as shift (LE < ADD).
    Conflict between rule 31 and token SUB resolved as shift (LE < SUB).
    Conflict between rule 31 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 31 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 31 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 31 and token ASSIGN resolved as shift (LE < ASSIGN).
    Conflict between rule 31 and token ADD_ASSIGN resolved as shift (LE < ADD_ASSIGN).
    Conflict between rule 31 and token SUB_ASSIGN resolved as shift (LE < SUB_ASSIGN).
    Conflict between rule 31 and token MUL_ASSIGN resolved as shift (LE < MUL_ASSIGN).
    Conflict between rule 31 and token DIV_ASSIGN resolved as shift (LE < DIV_ASSIGN).
    Conflict between rule 31 and token MOD_ASSIGN resolved as shift (LE < MOD_ASSIGN).
    Conflict between rule 31 and token AND_ASSIGN resolved as shift (LE < AND_ASSIGN).
    Conflict between rule 31 and token OR_ASSIGN resolved as shift (LE < OR_ASSIGN).
    Conflict between rule 31 and token LSHIFT_ASSIGN resolved as shift (LE < LSHIFT_ASSIGN).
    Conflict between rule 31 and token RSHIFT_ASSIGN resolved as shift (LE < RSHIFT_ASSIGN).
    Conflict between rule 31 and token EXC_OR_ASSIGN resolved as shift (LE < EXC_OR_ASSIGN).
    Conflict between rule 31 and token EQUAL resolved as reduce (EQUAL < LE).
    Conflict between rule 31 and token NOTEQUAL resolved as reduce (NOTEQUAL < LE).
    Conflict between rule 31 and token GT resolved as reduce (%left GT).
    Conflict between rule 31 and token GE resolved as reduce (%left GE).
    Conflict between rule 31 and token LT resolved as reduce (%left LT).
    Conflict between rule 31 and token LE resolved as reduce (%left LE).
    Conflict between rule 31 and token LSHIFT resolved as shift (LE < LSHIFT).
    Conflict between rule 31 and token RSHIFT resolved as shift (LE < RSHIFT).
    Conflict between rule 31 and token BIT_AND resolved as shift (LE < BIT_AND).
    Conflict between rule 31 and token BIT_OR resolved as shift (LE < BIT_OR).
    Conflict between rule 31 and token LOGIC_AND resolved as shift (LE < LOGIC_AND).
    Conflict between rule 31 and token LOGIC_OR resolved as shift (LE < LOGIC_OR).
    Conflict between rule 31 and token EXC_OR resolved as shift (LE < EXC_OR).


state 69

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   32           | expression LSHIFT expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 32 (expression)

    Conflict between rule 32 and token ADD resolved as shift (LSHIFT < ADD).
    Conflict between rule 32 and token SUB resolved as shift (LSHIFT < SUB).
    Conflict between rule 32 and token MUL resolved as shift (LSHIFT < MUL).
    Conflict between rule 32 and token DIV resolved as shift (LSHIFT < DIV).
    Conflict between rule 32 and token MOD resolved as shift (LSHIFT < MOD).
    Conflict between rule 32 and token ASSIGN resolved as shift (LSHIFT < ASSIGN).
    Conflict between rule 32 and token ADD_ASSIGN resolved as shift (LSHIFT < ADD_ASSIGN).
    Conflict between rule 32 and token SUB_ASSIGN resolved as shift (LSHIFT < SUB_ASSIGN).
    Conflict between rule 32 and token MUL_ASSIGN resolved as shift (LSHIFT < MUL_ASSIGN).
    Conflict between rule 32 and token DIV_ASSIGN resolved as shift (LSHIFT < DIV_ASSIGN).
    Conflict between rule 32 and token MOD_ASSIGN resolved as shift (LSHIFT < MOD_ASSIGN).
    Conflict between rule 32 and token AND_ASSIGN resolved as shift (LSHIFT < AND_ASSIGN).
    Conflict between rule 32 and token OR_ASSIGN resolved as shift (LSHIFT < OR_ASSIGN).
    Conflict between rule 32 and token LSHIFT_ASSIGN resolved as shift (LSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 32 and token RSHIFT_ASSIGN resolved as shift (LSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 32 and token EXC_OR_ASSIGN resolved as shift (LSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 32 and token EQUAL resolved as reduce (EQUAL < LSHIFT).
    Conflict between rule 32 and token NOTEQUAL resolved as reduce (NOTEQUAL < LSHIFT).
    Conflict between rule 32 and token GT resolved as reduce (GT < LSHIFT).
    Conflict between rule 32 and token GE resolved as reduce (GE < LSHIFT).
    Conflict between rule 32 and token LT resolved as reduce (LT < LSHIFT).
    Conflict between rule 32 and token LE resolved as reduce (LE < LSHIFT).
    Conflict between rule 32 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 32 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 32 and token BIT_AND resolved as reduce (BIT_AND < LSHIFT).
    Conflict between rule 32 and token BIT_OR resolved as reduce (BIT_OR < LSHIFT).
    Conflict between rule 32 and token LOGIC_AND resolved as reduce (LOGIC_AND < LSHIFT).
    Conflict between rule 32 and token LOGIC_OR resolved as reduce (LOGIC_OR < LSHIFT).
    Conflict between rule 32 and token EXC_OR resolved as reduce (EXC_OR < LSHIFT).


state 70

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   33           | expression RSHIFT expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, LSHIFT, RSHIFT, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32

    $default  reduce using rule 33 (expression)

    Conflict between rule 33 and token ADD resolved as shift (RSHIFT < ADD).
    Conflict between rule 33 and token SUB resolved as shift (RSHIFT < SUB).
    Conflict between rule 33 and token MUL resolved as shift (RSHIFT < MUL).
    Conflict between rule 33 and token DIV resolved as shift (RSHIFT < DIV).
    Conflict between rule 33 and token MOD resolved as shift (RSHIFT < MOD).
    Conflict between rule 33 and token ASSIGN resolved as shift (RSHIFT < ASSIGN).
    Conflict between rule 33 and token ADD_ASSIGN resolved as shift (RSHIFT < ADD_ASSIGN).
    Conflict between rule 33 and token SUB_ASSIGN resolved as shift (RSHIFT < SUB_ASSIGN).
    Conflict between rule 33 and token MUL_ASSIGN resolved as shift (RSHIFT < MUL_ASSIGN).
    Conflict between rule 33 and token DIV_ASSIGN resolved as shift (RSHIFT < DIV_ASSIGN).
    Conflict between rule 33 and token MOD_ASSIGN resolved as shift (RSHIFT < MOD_ASSIGN).
    Conflict between rule 33 and token AND_ASSIGN resolved as shift (RSHIFT < AND_ASSIGN).
    Conflict between rule 33 and token OR_ASSIGN resolved as shift (RSHIFT < OR_ASSIGN).
    Conflict between rule 33 and token LSHIFT_ASSIGN resolved as shift (RSHIFT < LSHIFT_ASSIGN).
    Conflict between rule 33 and token RSHIFT_ASSIGN resolved as shift (RSHIFT < RSHIFT_ASSIGN).
    Conflict between rule 33 and token EXC_OR_ASSIGN resolved as shift (RSHIFT < EXC_OR_ASSIGN).
    Conflict between rule 33 and token EQUAL resolved as reduce (EQUAL < RSHIFT).
    Conflict between rule 33 and token NOTEQUAL resolved as reduce (NOTEQUAL < RSHIFT).
    Conflict between rule 33 and token GT resolved as reduce (GT < RSHIFT).
    Conflict between rule 33 and token GE resolved as reduce (GE < RSHIFT).
    Conflict between rule 33 and token LT resolved as reduce (LT < RSHIFT).
    Conflict between rule 33 and token LE resolved as reduce (LE < RSHIFT).
    Conflict between rule 33 and token LSHIFT resolved as reduce (%left LSHIFT).
    Conflict between rule 33 and token RSHIFT resolved as reduce (%left RSHIFT).
    Conflict between rule 33 and token BIT_AND resolved as reduce (BIT_AND < RSHIFT).
    Conflict between rule 33 and token BIT_OR resolved as reduce (BIT_OR < RSHIFT).
    Conflict between rule 33 and token LOGIC_AND resolved as reduce (LOGIC_AND < RSHIFT).
    Conflict between rule 33 and token LOGIC_OR resolved as reduce (LOGIC_OR < RSHIFT).
    Conflict between rule 33 and token EXC_OR resolved as reduce (EXC_OR < RSHIFT).


state 71

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, LOGIC_OR, RP]
   13           | expression BIT_AND expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, LOGIC_AND, LOGIC_OR, RP]
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_OR         shift, and go to state 42
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 13 (expression)

    Conflict between rule 13 and token ADD resolved as shift (BIT_AND < ADD).
    Conflict between rule 13 and token SUB resolved as shift (BIT_AND < SUB).
    Conflict between rule 13 and token MUL resolved as shift (BIT_AND < MUL).
    Conflict between rule 13 and token DIV resolved as shift (BIT_AND < DIV).
    Conflict between rule 13 and token MOD resolved as shift (BIT_AND < MOD).
    Conflict between rule 13 and token ASSIGN resolved as shift (BIT_AND < ASSIGN).
    Conflict between rule 13 and token ADD_ASSIGN resolved as shift (BIT_AND < ADD_ASSIGN).
    Conflict between rule 13 and token SUB_ASSIGN resolved as shift (BIT_AND < SUB_ASSIGN).
    Conflict between rule 13 and token MUL_ASSIGN resolved as shift (BIT_AND < MUL_ASSIGN).
    Conflict between rule 13 and token DIV_ASSIGN resolved as shift (BIT_AND < DIV_ASSIGN).
    Conflict between rule 13 and token MOD_ASSIGN resolved as shift (BIT_AND < MOD_ASSIGN).
    Conflict between rule 13 and token AND_ASSIGN resolved as shift (BIT_AND < AND_ASSIGN).
    Conflict between rule 13 and token OR_ASSIGN resolved as shift (BIT_AND < OR_ASSIGN).
    Conflict between rule 13 and token LSHIFT_ASSIGN resolved as shift (BIT_AND < LSHIFT_ASSIGN).
    Conflict between rule 13 and token RSHIFT_ASSIGN resolved as shift (BIT_AND < RSHIFT_ASSIGN).
    Conflict between rule 13 and token EXC_OR_ASSIGN resolved as shift (BIT_AND < EXC_OR_ASSIGN).
    Conflict between rule 13 and token EQUAL resolved as reduce (EQUAL < BIT_AND).
    Conflict between rule 13 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_AND).
    Conflict between rule 13 and token GT resolved as reduce (GT < BIT_AND).
    Conflict between rule 13 and token GE resolved as reduce (GE < BIT_AND).
    Conflict between rule 13 and token LT resolved as reduce (LT < BIT_AND).
    Conflict between rule 13 and token LE resolved as reduce (LE < BIT_AND).
    Conflict between rule 13 and token LSHIFT resolved as shift (BIT_AND < LSHIFT).
    Conflict between rule 13 and token RSHIFT resolved as shift (BIT_AND < RSHIFT).
    Conflict between rule 13 and token BIT_AND resolved as reduce (%left BIT_AND).
    Conflict between rule 13 and token BIT_OR resolved as shift (BIT_AND < BIT_OR).
    Conflict between rule 13 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_AND).
    Conflict between rule 13 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_AND).
    Conflict between rule 13 and token EXC_OR resolved as shift (BIT_AND < EXC_OR).


state 72

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP]
   10           | expression BIT_OR expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP]
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 10 (expression)

    Conflict between rule 10 and token ADD resolved as shift (BIT_OR < ADD).
    Conflict between rule 10 and token SUB resolved as shift (BIT_OR < SUB).
    Conflict between rule 10 and token MUL resolved as shift (BIT_OR < MUL).
    Conflict between rule 10 and token DIV resolved as shift (BIT_OR < DIV).
    Conflict between rule 10 and token MOD resolved as shift (BIT_OR < MOD).
    Conflict between rule 10 and token ASSIGN resolved as shift (BIT_OR < ASSIGN).
    Conflict between rule 10 and token ADD_ASSIGN resolved as shift (BIT_OR < ADD_ASSIGN).
    Conflict between rule 10 and token SUB_ASSIGN resolved as shift (BIT_OR < SUB_ASSIGN).
    Conflict between rule 10 and token MUL_ASSIGN resolved as shift (BIT_OR < MUL_ASSIGN).
    Conflict between rule 10 and token DIV_ASSIGN resolved as shift (BIT_OR < DIV_ASSIGN).
    Conflict between rule 10 and token MOD_ASSIGN resolved as shift (BIT_OR < MOD_ASSIGN).
    Conflict between rule 10 and token AND_ASSIGN resolved as shift (BIT_OR < AND_ASSIGN).
    Conflict between rule 10 and token OR_ASSIGN resolved as shift (BIT_OR < OR_ASSIGN).
    Conflict between rule 10 and token LSHIFT_ASSIGN resolved as shift (BIT_OR < LSHIFT_ASSIGN).
    Conflict between rule 10 and token RSHIFT_ASSIGN resolved as shift (BIT_OR < RSHIFT_ASSIGN).
    Conflict between rule 10 and token EXC_OR_ASSIGN resolved as shift (BIT_OR < EXC_OR_ASSIGN).
    Conflict between rule 10 and token EQUAL resolved as reduce (EQUAL < BIT_OR).
    Conflict between rule 10 and token NOTEQUAL resolved as reduce (NOTEQUAL < BIT_OR).
    Conflict between rule 10 and token GT resolved as reduce (GT < BIT_OR).
    Conflict between rule 10 and token GE resolved as reduce (GE < BIT_OR).
    Conflict between rule 10 and token LT resolved as reduce (LT < BIT_OR).
    Conflict between rule 10 and token LE resolved as reduce (LE < BIT_OR).
    Conflict between rule 10 and token LSHIFT resolved as shift (BIT_OR < LSHIFT).
    Conflict between rule 10 and token RSHIFT resolved as shift (BIT_OR < RSHIFT).
    Conflict between rule 10 and token BIT_AND resolved as reduce (BIT_AND < BIT_OR).
    Conflict between rule 10 and token BIT_OR resolved as reduce (%left BIT_OR).
    Conflict between rule 10 and token LOGIC_AND resolved as reduce (LOGIC_AND < BIT_OR).
    Conflict between rule 10 and token LOGIC_OR resolved as reduce (LOGIC_OR < BIT_OR).
    Conflict between rule 10 and token EXC_OR resolved as shift (BIT_OR < EXC_OR).


state 73

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, RP]
   16           | expression LOGIC_AND expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, RP]
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    LOGIC_OR       shift, and go to state 44
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 16 (expression)

    Conflict between rule 16 and token ADD resolved as shift (LOGIC_AND < ADD).
    Conflict between rule 16 and token SUB resolved as shift (LOGIC_AND < SUB).
    Conflict between rule 16 and token MUL resolved as shift (LOGIC_AND < MUL).
    Conflict between rule 16 and token DIV resolved as shift (LOGIC_AND < DIV).
    Conflict between rule 16 and token MOD resolved as shift (LOGIC_AND < MOD).
    Conflict between rule 16 and token ASSIGN resolved as shift (LOGIC_AND < ASSIGN).
    Conflict between rule 16 and token ADD_ASSIGN resolved as shift (LOGIC_AND < ADD_ASSIGN).
    Conflict between rule 16 and token SUB_ASSIGN resolved as shift (LOGIC_AND < SUB_ASSIGN).
    Conflict between rule 16 and token MUL_ASSIGN resolved as shift (LOGIC_AND < MUL_ASSIGN).
    Conflict between rule 16 and token DIV_ASSIGN resolved as shift (LOGIC_AND < DIV_ASSIGN).
    Conflict between rule 16 and token MOD_ASSIGN resolved as shift (LOGIC_AND < MOD_ASSIGN).
    Conflict between rule 16 and token AND_ASSIGN resolved as shift (LOGIC_AND < AND_ASSIGN).
    Conflict between rule 16 and token OR_ASSIGN resolved as shift (LOGIC_AND < OR_ASSIGN).
    Conflict between rule 16 and token LSHIFT_ASSIGN resolved as shift (LOGIC_AND < LSHIFT_ASSIGN).
    Conflict between rule 16 and token RSHIFT_ASSIGN resolved as shift (LOGIC_AND < RSHIFT_ASSIGN).
    Conflict between rule 16 and token EXC_OR_ASSIGN resolved as shift (LOGIC_AND < EXC_OR_ASSIGN).
    Conflict between rule 16 and token EQUAL resolved as reduce (EQUAL < LOGIC_AND).
    Conflict between rule 16 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_AND).
    Conflict between rule 16 and token GT resolved as reduce (GT < LOGIC_AND).
    Conflict between rule 16 and token GE resolved as reduce (GE < LOGIC_AND).
    Conflict between rule 16 and token LT resolved as reduce (LT < LOGIC_AND).
    Conflict between rule 16 and token LE resolved as reduce (LE < LOGIC_AND).
    Conflict between rule 16 and token LSHIFT resolved as shift (LOGIC_AND < LSHIFT).
    Conflict between rule 16 and token RSHIFT resolved as shift (LOGIC_AND < RSHIFT).
    Conflict between rule 16 and token BIT_AND resolved as shift (LOGIC_AND < BIT_AND).
    Conflict between rule 16 and token BIT_OR resolved as shift (LOGIC_AND < BIT_OR).
    Conflict between rule 16 and token LOGIC_AND resolved as reduce (%left LOGIC_AND).
    Conflict between rule 16 and token LOGIC_OR resolved as shift (LOGIC_AND < LOGIC_OR).
    Conflict between rule 16 and token EXC_OR resolved as shift (LOGIC_AND < EXC_OR).


state 74

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression
   15           | expression . LOGIC_OR expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LOGIC_OR, RP]
   15           | expression LOGIC_OR expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, LOGIC_AND, LOGIC_OR, RP]
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40
    BIT_AND        shift, and go to state 41
    BIT_OR         shift, and go to state 42
    EXC_OR         shift, and go to state 45

    $default  reduce using rule 15 (expression)

    Conflict between rule 15 and token ADD resolved as shift (LOGIC_OR < ADD).
    Conflict between rule 15 and token SUB resolved as shift (LOGIC_OR < SUB).
    Conflict between rule 15 and token MUL resolved as shift (LOGIC_OR < MUL).
    Conflict between rule 15 and token DIV resolved as shift (LOGIC_OR < DIV).
    Conflict between rule 15 and token MOD resolved as shift (LOGIC_OR < MOD).
    Conflict between rule 15 and token ASSIGN resolved as shift (LOGIC_OR < ASSIGN).
    Conflict between rule 15 and token ADD_ASSIGN resolved as shift (LOGIC_OR < ADD_ASSIGN).
    Conflict between rule 15 and token SUB_ASSIGN resolved as shift (LOGIC_OR < SUB_ASSIGN).
    Conflict between rule 15 and token MUL_ASSIGN resolved as shift (LOGIC_OR < MUL_ASSIGN).
    Conflict between rule 15 and token DIV_ASSIGN resolved as shift (LOGIC_OR < DIV_ASSIGN).
    Conflict between rule 15 and token MOD_ASSIGN resolved as shift (LOGIC_OR < MOD_ASSIGN).
    Conflict between rule 15 and token AND_ASSIGN resolved as shift (LOGIC_OR < AND_ASSIGN).
    Conflict between rule 15 and token OR_ASSIGN resolved as shift (LOGIC_OR < OR_ASSIGN).
    Conflict between rule 15 and token LSHIFT_ASSIGN resolved as shift (LOGIC_OR < LSHIFT_ASSIGN).
    Conflict between rule 15 and token RSHIFT_ASSIGN resolved as shift (LOGIC_OR < RSHIFT_ASSIGN).
    Conflict between rule 15 and token EXC_OR_ASSIGN resolved as shift (LOGIC_OR < EXC_OR_ASSIGN).
    Conflict between rule 15 and token EQUAL resolved as reduce (EQUAL < LOGIC_OR).
    Conflict between rule 15 and token NOTEQUAL resolved as reduce (NOTEQUAL < LOGIC_OR).
    Conflict between rule 15 and token GT resolved as reduce (GT < LOGIC_OR).
    Conflict between rule 15 and token GE resolved as reduce (GE < LOGIC_OR).
    Conflict between rule 15 and token LT resolved as reduce (LT < LOGIC_OR).
    Conflict between rule 15 and token LE resolved as reduce (LE < LOGIC_OR).
    Conflict between rule 15 and token LSHIFT resolved as shift (LOGIC_OR < LSHIFT).
    Conflict between rule 15 and token RSHIFT resolved as shift (LOGIC_OR < RSHIFT).
    Conflict between rule 15 and token BIT_AND resolved as shift (LOGIC_OR < BIT_AND).
    Conflict between rule 15 and token BIT_OR resolved as shift (LOGIC_OR < BIT_OR).
    Conflict between rule 15 and token LOGIC_AND resolved as reduce (LOGIC_AND < LOGIC_OR).
    Conflict between rule 15 and token LOGIC_OR resolved as reduce (%left LOGIC_OR).
    Conflict between rule 15 and token EXC_OR resolved as shift (LOGIC_OR < EXC_OR).


state 75

    5 expression: expression . ADD expression
    6           | expression . SUB expression
    7           | expression . MUL expression
    8           | expression . DIV expression
    9           | expression . MOD expression
   10           | expression . BIT_OR expression
   11           | expression . EQUAL expression
   12           | expression . NOTEQUAL expression
   13           | expression . BIT_AND expression
   14           | expression . EXC_OR expression  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   14           | expression EXC_OR expression .  [$end, EQUAL, NOTEQUAL, GT, GE, LT, LE, BIT_AND, BIT_OR, LOGIC_AND, LOGIC_OR, RP, EXC_OR]
   15           | expression . LOGIC_OR expression
   16           | expression . LOGIC_AND expression
   17           | expression . ASSIGN expression
   18           | expression . ADD_ASSIGN expression
   19           | expression . SUB_ASSIGN expression
   20           | expression . MUL_ASSIGN expression
   21           | expression . DIV_ASSIGN expression
   22           | expression . MOD_ASSIGN expression
   23           | expression . AND_ASSIGN expression
   24           | expression . OR_ASSIGN expression
   25           | expression . EXC_OR_ASSIGN expression
   26           | expression . LSHIFT_ASSIGN expression
   27           | expression . RSHIFT_ASSIGN expression
   28           | expression . GT expression
   29           | expression . GE expression
   30           | expression . LT expression
   31           | expression . LE expression
   32           | expression . LSHIFT expression
   33           | expression . RSHIFT expression

    ADD            shift, and go to state 17
    SUB            shift, and go to state 18
    MUL            shift, and go to state 19
    DIV            shift, and go to state 20
    MOD            shift, and go to state 21
    ASSIGN         shift, and go to state 22
    ADD_ASSIGN     shift, and go to state 23
    SUB_ASSIGN     shift, and go to state 24
    MUL_ASSIGN     shift, and go to state 25
    DIV_ASSIGN     shift, and go to state 26
    MOD_ASSIGN     shift, and go to state 27
    AND_ASSIGN     shift, and go to state 28
    OR_ASSIGN      shift, and go to state 29
    LSHIFT_ASSIGN  shift, and go to state 30
    RSHIFT_ASSIGN  shift, and go to state 31
    EXC_OR_ASSIGN  shift, and go to state 32
    LSHIFT         shift, and go to state 39
    RSHIFT         shift, and go to state 40

    $default  reduce using rule 14 (expression)

    Conflict between rule 14 and token ADD resolved as shift (EXC_OR < ADD).
    Conflict between rule 14 and token SUB resolved as shift (EXC_OR < SUB).
    Conflict between rule 14 and token MUL resolved as shift (EXC_OR < MUL).
    Conflict between rule 14 and token DIV resolved as shift (EXC_OR < DIV).
    Conflict between rule 14 and token MOD resolved as shift (EXC_OR < MOD).
    Conflict between rule 14 and token ASSIGN resolved as shift (EXC_OR < ASSIGN).
    Conflict between rule 14 and token ADD_ASSIGN resolved as shift (EXC_OR < ADD_ASSIGN).
    Conflict between rule 14 and token SUB_ASSIGN resolved as shift (EXC_OR < SUB_ASSIGN).
    Conflict between rule 14 and token MUL_ASSIGN resolved as shift (EXC_OR < MUL_ASSIGN).
    Conflict between rule 14 and token DIV_ASSIGN resolved as shift (EXC_OR < DIV_ASSIGN).
    Conflict between rule 14 and token MOD_ASSIGN resolved as shift (EXC_OR < MOD_ASSIGN).
    Conflict between rule 14 and token AND_ASSIGN resolved as shift (EXC_OR < AND_ASSIGN).
    Conflict between rule 14 and token OR_ASSIGN resolved as shift (EXC_OR < OR_ASSIGN).
    Conflict between rule 14 and token LSHIFT_ASSIGN resolved as shift (EXC_OR < LSHIFT_ASSIGN).
    Conflict between rule 14 and token RSHIFT_ASSIGN resolved as shift (EXC_OR < RSHIFT_ASSIGN).
    Conflict between rule 14 and token EXC_OR_ASSIGN resolved as shift (EXC_OR < EXC_OR_ASSIGN).
    Conflict between rule 14 and token EQUAL resolved as reduce (EQUAL < EXC_OR).
    Conflict between rule 14 and token NOTEQUAL resolved as reduce (NOTEQUAL < EXC_OR).
    Conflict between rule 14 and token GT resolved as reduce (GT < EXC_OR).
    Conflict between rule 14 and token GE resolved as reduce (GE < EXC_OR).
    Conflict between rule 14 and token LT resolved as reduce (LT < EXC_OR).
    Conflict between rule 14 and token LE resolved as reduce (LE < EXC_OR).
    Conflict between rule 14 and token LSHIFT resolved as shift (EXC_OR < LSHIFT).
    Conflict between rule 14 and token RSHIFT resolved as shift (EXC_OR < RSHIFT).
    Conflict between rule 14 and token BIT_AND resolved as reduce (BIT_AND < EXC_OR).
    Conflict between rule 14 and token BIT_OR resolved as reduce (BIT_OR < EXC_OR).
    Conflict between rule 14 and token LOGIC_AND resolved as reduce (LOGIC_AND < EXC_OR).
    Conflict between rule 14 and token LOGIC_OR resolved as reduce (LOGIC_OR < EXC_OR).
    Conflict between rule 14 and token EXC_OR resolved as reduce (%left EXC_OR).
